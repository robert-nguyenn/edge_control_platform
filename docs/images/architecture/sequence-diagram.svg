<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="1000" viewBox="0 0 1200 1000">
  <style>
    .actor { fill: #78909C; stroke: #37474F; stroke-width: 2; }
    .actor-label { font-family: Arial, sans-serif; font-size: 18px; fill: white; font-weight: bold; }
    .component { fill: #1E88E5; stroke: #0D47A1; stroke-width: 2; }
    .component-label { font-family: Arial, sans-serif; font-size: 18px; fill: white; font-weight: bold; }
    .database { fill: #7CB342; stroke: #33691E; stroke-width: 2; }
    .db-label { font-family: Arial, sans-serif; font-size: 18px; fill: white; font-weight: bold; }
    .arrow { stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead); }
    .message { font-family: Arial, sans-serif; font-size: 14px; fill: #333; }
    .note { font-family: Arial, sans-serif; font-size: 14px; fill: #333; font-style: italic; }
    .note-box { fill: #FFF59D; stroke: #FDD835; stroke-width: 1; }
    .activation { fill: #BBDEFB; stroke: #0D47A1; stroke-width: 1; }
    .banner { fill: #2196F3; }
    .bg { fill: #F5F5F5; }
    .sequence-number { font-family: Arial, sans-serif; font-size: 12px; fill: #333; font-weight: bold; }
  </style>
  
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#546E7A"/>
    </marker>
  </defs>

  <rect class="bg" x="0" y="0" width="1200" height="1000" />
  
  <!-- Banner -->
  <rect class="banner" x="0" y="0" width="1200" height="80" />
  <text x="600" y="50" style="font-family: Arial, sans-serif; font-size: 32px; fill: white; text-anchor: middle; font-weight: bold;">Flag Evaluation Sequence</text>
  
  <!-- Actors -->
  <rect class="actor" x="100" y="120" width="120" height="60" rx="5" />
  <text class="actor-label" x="160" y="155" text-anchor="middle">Client App</text>
  
  <rect class="component" x="300" y="120" width="120" height="60" rx="5" />
  <text class="component-label" x="360" y="155" text-anchor="middle">SDK</text>
  
  <rect class="component" x="500" y="120" width="120" height="60" rx="5" />
  <text class="component-label" x="560" y="155" text-anchor="middle">Go Sidecar</text>
  
  <rect class="component" x="700" y="120" width="120" height="60" rx="5" />
  <text class="component-label" x="760" y="155" text-anchor="middle">.NET API</text>
  
  <rect class="database" x="900" y="120" width="120" height="60" rx="5" />
  <text class="db-label" x="960" y="155" text-anchor="middle">Redis</text>
  
  <rect class="database" x="1100" y="120" width="120" height="60" rx="5" />
  <text class="db-label" x="1160" y="155" text-anchor="middle">PostgreSQL</text>

  <!-- Lifelines -->
  <line x1="160" y1="180" x2="160" y2="950" style="stroke: #37474F; stroke-width: 1; stroke-dasharray: 5,5;" />
  <line x1="360" y1="180" x2="360" y2="950" style="stroke: #0D47A1; stroke-width: 1; stroke-dasharray: 5,5;" />
  <line x1="560" y1="180" x2="560" y2="950" style="stroke: #0D47A1; stroke-width: 1; stroke-dasharray: 5,5;" />
  <line x1="760" y1="180" x2="760" y2="950" style="stroke: #0D47A1; stroke-width: 1; stroke-dasharray: 5,5;" />
  <line x1="960" y1="180" x2="960" y2="950" style="stroke: #33691E; stroke-width: 1; stroke-dasharray: 5,5;" />
  <line x1="1160" y1="180" x2="1160" y2="950" style="stroke: #33691E; stroke-width: 1; stroke-dasharray: 5,5;" />
  
  <!-- Step 1: Initial Request -->
  <rect class="activation" x="155" y="200" width="10" height="700" />
  <line class="arrow" x1="160" y1="220" x2="355" y2="220" />
  <text class="message" x="257" y="215" text-anchor="middle">1. isEnabled("new-feature", context)</text>
  
  <!-- Step 2: SDK Local Cache Check -->
  <rect class="activation" x="355" y="220" width="10" height="660" />
  <rect class="note-box" x="380" y="230" width="160" height="80" rx="5" />
  <text class="note" x="460" y="260" text-anchor="middle">2. Check local cache</text>
  <text class="note" x="460" y="280" text-anchor="middle">for flag configuration</text>
  <text class="note" x="460" y="300" text-anchor="middle">and rules</text>

  <!-- Step 3: SDK to Go Sidecar (Background Polling) -->
  <rect class="note-box" x="380" y="330" width="160" height="40" rx="5" />
  <text class="note" x="460" y="355" text-anchor="middle">If cache miss/stale</text>
  
  <line class="arrow" x1="365" y1="380" x2="555" y2="380" />
  <text class="message" x="460" y="375" text-anchor="middle">3. GET /flags (with ETag)</text>
  
  <!-- Step 4: Go Sidecar processing -->
  <rect class="activation" x="555" y="380" width="10" height="120" />
  <rect class="note-box" x="575" y="390" width="160" height="40" rx="5" />
  <text class="note" x="655" y="415" text-anchor="middle">Circuit breaker check</text>
  
  <line class="arrow" x1="565" y1="440" x2="755" y2="440" />
  <text class="message" x="660" y="435" text-anchor="middle">4. Forward request</text>
  
  <!-- Step 5: API to Redis -->
  <rect class="activation" x="755" y="440" width="10" height="160" />
  <line class="arrow" x1="765" y1="470" x2="955" y2="470" />
  <text class="message" x="860" y="465" text-anchor="middle">5. Get cached flags</text>
  
  <!-- Step 6: Redis Response -->
  <rect class="activation" x="955" y="470" width="10" height="60" />
  <line class="arrow" x1="955" y1="530" x2="765" y2="530" style="stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead); stroke-dasharray: 5,3;" />
  <text class="message" x="860" y="525" text-anchor="middle">6. Return cached data</text>
  
  <!-- Step 7: If cache miss, API to DB -->
  <rect class="note-box" x="775" y="540" width="160" height="40" rx="5" />
  <text class="note" x="855" y="565" text-anchor="middle">On cache miss</text>
  
  <line class="arrow" x1="765" y1="590" x2="1155" y2="590" />
  <text class="message" x="960" y="585" text-anchor="middle">7. Query flags from DB</text>
  
  <!-- Step 8: DB Response -->
  <rect class="activation" x="1155" y="590" width="10" height="60" />
  <line class="arrow" x1="1155" y1="650" x2="765" y2="650" style="stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead); stroke-dasharray: 5,3;" />
  <text class="message" x="960" y="645" text-anchor="middle">8. Return flags</text>
  
  <!-- Step 9: Update Redis Cache -->
  <line class="arrow" x1="765" y1="680" x2="955" y2="680" style="stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead);" />
  <text class="message" x="860" y="675" text-anchor="middle">9. Cache flags</text>
  <rect class="activation" x="955" y="680" width="10" height="40" />
  
  <!-- Step 10-12: Response chain back to SDK -->
  <line class="arrow" x1="765" y1="730" x2="565" y2="730" style="stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead); stroke-dasharray: 5,3;" />
  <text class="message" x="665" y="725" text-anchor="middle">10. Return flags with ETag</text>
  
  <line class="arrow" x1="565" y1="760" x2="365" y2="760" style="stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead); stroke-dasharray: 5,3;" />
  <text class="message" x="465" y="755" text-anchor="middle">11. Return flags</text>
  
  <rect class="note-box" x="380" y="770" width="160" height="40" rx="5" />
  <text class="note" x="460" y="795" text-anchor="middle">12. Update local cache</text>
  
  <!-- Step 13-14: Local Evaluation -->
  <rect class="note-box" x="380" y="820" width="160" height="80" rx="5" />
  <text class="note" x="460" y="845" text-anchor="middle">13. Evaluate flag rules</text>
  <text class="note" x="460" y="865" text-anchor="middle">using consistent hashing</text>
  <text class="note" x="460" y="885" text-anchor="middle">algorithm</text>
  
  <line class="arrow" x1="355" y1="910" x2="165" y2="910" style="stroke: #546E7A; stroke-width: 2; marker-end: url(#arrowhead); stroke-dasharray: 5,3;" />
  <text class="message" x="260" y="905" text-anchor="middle">14. Return decision (true/false)</text>
  
  <rect class="actor" x="100" y="950" width="120" height="60" rx="5" />
  <text class="actor-label" x="160" y="985" text-anchor="middle">Client App</text>
  
  <rect class="component" x="300" y="950" width="120" height="60" rx="5" />
  <text class="component-label" x="360" y="985" text-anchor="middle">SDK</text>
  
  <rect class="component" x="500" y="950" width="120" height="60" rx="5" />
  <text class="component-label" x="560" y="985" text-anchor="middle">Go Sidecar</text>
  
  <rect class="component" x="700" y="950" width="120" height="60" rx="5" />
  <text class="component-label" x="760" y="985" text-anchor="middle">.NET API</text>
  
  <rect class="database" x="900" y="950" width="120" height="60" rx="5" />
  <text class="db-label" x="960" y="985" text-anchor="middle">Redis</text>
  
  <rect class="database" x="1100" y="950" width="120" height="60" rx="5" />
  <text class="db-label" x="1160" y="985" text-anchor="middle">PostgreSQL</text>
</svg>
